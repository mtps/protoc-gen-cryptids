// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        v5.29.3
// source: crypt/types.proto

package cryptpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// EString is a wrapper for an encrypted string.
type EString struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         []byte                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EString) Reset() {
	*x = EString{}
	mi := &file_crypt_types_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EString) ProtoMessage() {}

func (x *EString) ProtoReflect() protoreflect.Message {
	mi := &file_crypt_types_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EString.ProtoReflect.Descriptor instead.
func (*EString) Descriptor() ([]byte, []int) {
	return file_crypt_types_proto_rawDescGZIP(), []int{0}
}

func (x *EString) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type EBytes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         []byte                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EBytes) Reset() {
	*x = EBytes{}
	mi := &file_crypt_types_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EBytes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EBytes) ProtoMessage() {}

func (x *EBytes) ProtoReflect() protoreflect.Message {
	mi := &file_crypt_types_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EBytes.ProtoReflect.Descriptor instead.
func (*EBytes) Descriptor() ([]byte, []int) {
	return file_crypt_types_proto_rawDescGZIP(), []int{1}
}

func (x *EBytes) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type ETimestamp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         []byte                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ETimestamp) Reset() {
	*x = ETimestamp{}
	mi := &file_crypt_types_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ETimestamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ETimestamp) ProtoMessage() {}

func (x *ETimestamp) ProtoReflect() protoreflect.Message {
	mi := &file_crypt_types_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ETimestamp.ProtoReflect.Descriptor instead.
func (*ETimestamp) Descriptor() ([]byte, []int) {
	return file_crypt_types_proto_rawDescGZIP(), []int{2}
}

func (x *ETimestamp) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type EInt struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         []byte                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EInt) Reset() {
	*x = EInt{}
	mi := &file_crypt_types_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EInt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EInt) ProtoMessage() {}

func (x *EInt) ProtoReflect() protoreflect.Message {
	mi := &file_crypt_types_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EInt.ProtoReflect.Descriptor instead.
func (*EInt) Descriptor() ([]byte, []int) {
	return file_crypt_types_proto_rawDescGZIP(), []int{3}
}

func (x *EInt) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type EAny struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         []byte                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EAny) Reset() {
	*x = EAny{}
	mi := &file_crypt_types_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EAny) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EAny) ProtoMessage() {}

func (x *EAny) ProtoReflect() protoreflect.Message {
	mi := &file_crypt_types_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EAny.ProtoReflect.Descriptor instead.
func (*EAny) Descriptor() ([]byte, []int) {
	return file_crypt_types_proto_rawDescGZIP(), []int{4}
}

func (x *EAny) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

var File_crypt_types_proto protoreflect.FileDescriptor

var file_crypt_types_proto_rawDesc = []byte{
	0x0a, 0x11, 0x63, 0x72, 0x79, 0x70, 0x74, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x63, 0x72, 0x79, 0x70, 0x74, 0x22, 0x1f, 0x0a, 0x07, 0x45, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1e, 0x0a, 0x06, 0x45,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x22, 0x0a, 0x0a, 0x45,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x1c, 0x0a, 0x04, 0x45, 0x49, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1c, 0x0a,
	0x04, 0x45, 0x41, 0x6e, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x5f, 0x0a, 0x1e, 0x63,
	0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x6d, 0x74, 0x70, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x42, 0x0a, 0x43,
	0x72, 0x79, 0x70, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x74, 0x70, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x64, 0x73, 0x2f, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x3b, 0x63, 0x72, 0x79, 0x70, 0x74, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_crypt_types_proto_rawDescOnce sync.Once
	file_crypt_types_proto_rawDescData = file_crypt_types_proto_rawDesc
)

func file_crypt_types_proto_rawDescGZIP() []byte {
	file_crypt_types_proto_rawDescOnce.Do(func() {
		file_crypt_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_crypt_types_proto_rawDescData)
	})
	return file_crypt_types_proto_rawDescData
}

var file_crypt_types_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_crypt_types_proto_goTypes = []any{
	(*EString)(nil),    // 0: crypt.EString
	(*EBytes)(nil),     // 1: crypt.EBytes
	(*ETimestamp)(nil), // 2: crypt.ETimestamp
	(*EInt)(nil),       // 3: crypt.EInt
	(*EAny)(nil),       // 4: crypt.EAny
}
var file_crypt_types_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_crypt_types_proto_init() }
func file_crypt_types_proto_init() {
	if File_crypt_types_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_crypt_types_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_crypt_types_proto_goTypes,
		DependencyIndexes: file_crypt_types_proto_depIdxs,
		MessageInfos:      file_crypt_types_proto_msgTypes,
	}.Build()
	File_crypt_types_proto = out.File
	file_crypt_types_proto_rawDesc = nil
	file_crypt_types_proto_goTypes = nil
	file_crypt_types_proto_depIdxs = nil
}
