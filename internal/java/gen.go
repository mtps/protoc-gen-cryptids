package java

import (
	"fmt"
	types "github.com/mtps/protoc-gen-cryptids/internal"
	"google.golang.org/protobuf/compiler/protogen"
)

var (
	ProviderType   = "java.util.function.Function<byte[], byte[]>"
	EProviderParam = ProviderType + " encryptionProvider"
	DProviderParam = ProviderType + " decryptionProvider"
)

func EProvider(param string) string {
	return fmt.Sprintf("encryptionProvider.apply(%s)", param)
}

func DProvider(param string) string {
	return fmt.Sprintf("decryptionProvider.apply(%s)", param)
}

func GenCryptProviderRegistry(gen *protogen.Plugin) *protogen.GeneratedFile {
	g := gen.NewGeneratedFile(types.CryptProviderRegistryFileJava, "github.com/mtps/protoc-gen-cryptids/crypt")
	g.P("// Code generated by protoc-gen-cryptids.")
	g.P("// DO NOT EDIT.")
	g.P("package ", types.CryptProviderPkg, ";")
	g.P()
	g.P("public class CryptProviderRegistry {")
	g.P("  static ", ProviderType, " enc;")
	g.P("  static ", ProviderType, " dec;")
	g.P()
	g.P("  public static void register(", ProviderType, " enc, ", ProviderType, " dec) {")
	g.P("    CryptProviderRegistry.enc = enc;")
	g.P("    CryptProviderRegistry.dec = dec;")
	g.P("  }")
	g.P("}")
	return g
}

func GenCryptProvider(gen *protogen.Plugin) *protogen.GeneratedFile {
	g := gen.NewGeneratedFile(types.CryptProviderFileJava, "github.com/mtps/protoc-gen-cryptids/crypt")
	g.P("// Code generated by protoc-gen-cryptids.")
	g.P("// DO NOT EDIT.")
	g.P("package ", types.CryptProviderPkg, ";")
	g.P()
	g.P("@FunctionalInterface")
	g.P("public interface CryptProvider {")
	g.P("  byte[] doCipher(byte[] value);")
	g.P()
	g.P("  static void register(CryptProvider enc, CryptProvider dec) {")
	g.P("    CryptProviderRegistry.register(enc::doCipher, dec::doCipher);")
	g.P("  }")
	g.P("}")
	return g
}
